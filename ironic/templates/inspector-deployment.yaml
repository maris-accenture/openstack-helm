{{- $envAll := . }}
{{- $dependencies := .Values.dependencies.conductor }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ironic-inspector
  labels:
    system: openstack
    type: backend
    component: none
spec:
  replicas: {{ .Values.replicas.inspector }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: ironic-inspector
  template:
    metadata:
      labels:
        name: ironic-inspector
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.hash" }}
        pod.beta.kubernetes.io/init-containers: '[
{{ tuple $envAll $dependencies | include "helm-toolkit.kubernetes_entrypoint_init_container" | indent 10 }}
        ]'
    spec:
      nodeSelector:
        {{ .Values.labels.control_node_selector_key }}: {{ .Values.labels.control_node_selector_value }}
      containers:
        - name: ironic-inspector
          image: {{ .Values.images.inspector }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          {{- if .Values.resources.enabled }}
          command:
            - bash
            - /container.init/ironic-inspector-start
          resources:
            requests:
              memory: {{ .Values.resources.ironic_inspector.requests.memory | quote }}
              cpu: {{ .Values.resources.ironic_inspector.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.ironic_inspector.limits.memory | quote }}
              cpu: {{ .Values.resources.ironic_inspector.limits.cpu | quote }}
          {{- end }}
          volumeMounts:
            - mountPath: /ironic-etc
              name: ironic-etc
            - mountPath: /ironic-patches
              name: ironic-patches
            - mountPath: /container.init
              name: container-init
      volumes:
        - name: ironic-etc
          configMap:
            name: ironic-etc
        - name: ironic-patches
          configMap:
            name: ironic-patches
        - name: container-init
          configMap:
            name: ironic-bin
